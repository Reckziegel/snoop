[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 snoop authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bernardo Reckziegel. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Reckziegel B (2022). snoop: Portfolio Construction within Tidyverse. R package version 0.1.0, https://reckziegel.github.io/snoop/.","code":"@Manual{,   title = {snoop: Portfolio Construction within the Tidyverse},   author = {Bernardo Reckziegel},   year = {2022},   note = {R package version 0.1.0},   url = {https://reckziegel.github.io/snoop/}, }"},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Portfolio Construction within the Tidyverse ","text":"can install development version snoop GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"Reckziegel/snoop\")"},{"path":"/reference/construct_rebalance_infrastructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a Rebalance Infrastrucure — construct_rebalance_infrastructure","title":"Build a Rebalance Infrastrucure — construct_rebalance_infrastructure","text":"Prepares snoop_rolling object passing rebalance_portfolio.","code":""},{"path":"/reference/construct_rebalance_infrastructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a Rebalance Infrastrucure — construct_rebalance_infrastructure","text":"","code":"construct_rebalance_infrastructure(   .data,   .by = c(\"day\", \"week\", \"month\", \"year\") )"},{"path":"/reference/construct_rebalance_infrastructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a Rebalance Infrastrucure — construct_rebalance_infrastructure","text":".data tabular (non-tidy) tibble. .string periodicity compute rebalance. One : day, week, month year.","code":""},{"path":"/reference/construct_rebalance_infrastructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a Rebalance Infrastrucure — construct_rebalance_infrastructure","text":"tibble snoop_rebalance class. Contains 3 columns: .date, .analysis .assessment.","code":""},{"path":"/reference/construct_rebalance_infrastructure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a Rebalance Infrastrucure — construct_rebalance_infrastructure","text":"","code":"stocks <- tibble::tibble(   time = as.Date('2009-01-01') + 0:99,   X    = rnorm(100, 0, 1),   Y    = rnorm(100, 0, 2),   Z    = rnorm(100, 0, 4) )  roll <- construct_rolling_infrastructure(stocks, .initial = 50)  const <- construct_rebalance_infrastructure(roll) const #> # A tibble: 50 × 3 #>    .date      .analysis         .assessment      #>    <date>     <list>            <list>           #>  1 2009-02-20 <tibble [50 × 3]> <tibble [1 × 3]> #>  2 2009-02-21 <tibble [50 × 3]> <tibble [1 × 3]> #>  3 2009-02-22 <tibble [50 × 3]> <tibble [1 × 3]> #>  4 2009-02-23 <tibble [50 × 3]> <tibble [1 × 3]> #>  5 2009-02-24 <tibble [50 × 3]> <tibble [1 × 3]> #>  6 2009-02-25 <tibble [50 × 3]> <tibble [1 × 3]> #>  7 2009-02-26 <tibble [50 × 3]> <tibble [1 × 3]> #>  8 2009-02-27 <tibble [50 × 3]> <tibble [1 × 3]> #>  9 2009-02-28 <tibble [50 × 3]> <tibble [1 × 3]> #> 10 2009-03-01 <tibble [50 × 3]> <tibble [1 × 3]> #> # … with 40 more rows  # Contains information under the hood: class(const) #> [1] \"snoop_rebalance\" \"tbl_df\"          \"tbl\"             \"data.frame\""},{"path":"/reference/construct_rolling_infrastructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a Rolling Infraestructure — construct_rolling_infrastructure","title":"Build a Rolling Infraestructure — construct_rolling_infrastructure","text":"Constructs tidy-resampling object time-series data.","code":""},{"path":"/reference/construct_rolling_infrastructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a Rolling Infraestructure — construct_rolling_infrastructure","text":"","code":"construct_rolling_infrastructure(   .data,   .initial = 252,   .assess = 1,   .cumulative = FALSE,   ... )"},{"path":"/reference/construct_rolling_infrastructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a Rolling Infraestructure — construct_rolling_infrastructure","text":".data tabular (non-tidy) tibble. .initial integer. number samples used analysis/modeling initial resample. .assess integer. number samples used assessment resample. .cumulative boolean. analysis resample grow beyond size specified .initial resample?. ... Additional arguments passed rolling_origin.","code":""},{"path":"/reference/construct_rolling_infrastructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a Rolling Infraestructure — construct_rolling_infrastructure","text":"tibble snoop_rolling class. Contains 3 columns: .date, .analysis .assessment.","code":""},{"path":"/reference/construct_rolling_infrastructure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a Rolling Infraestructure — construct_rolling_infrastructure","text":"","code":"stocks <- tibble::tibble(   time = as.Date('2009-01-01') + 0:99,   X    = rnorm(100, 0, 1),   Y    = rnorm(100, 0, 2),   Z    = rnorm(100, 0, 4) )  construct_rolling_infrastructure(stocks, .initial = 50) #> # A tibble: 50 × 3 #>    .date      .analysis         .assessment      #>    <date>     <list>            <list>           #>  1 2009-02-20 <tibble [50 × 3]> <tibble [1 × 3]> #>  2 2009-02-21 <tibble [50 × 3]> <tibble [1 × 3]> #>  3 2009-02-22 <tibble [50 × 3]> <tibble [1 × 3]> #>  4 2009-02-23 <tibble [50 × 3]> <tibble [1 × 3]> #>  5 2009-02-24 <tibble [50 × 3]> <tibble [1 × 3]> #>  6 2009-02-25 <tibble [50 × 3]> <tibble [1 × 3]> #>  7 2009-02-26 <tibble [50 × 3]> <tibble [1 × 3]> #>  8 2009-02-27 <tibble [50 × 3]> <tibble [1 × 3]> #>  9 2009-02-28 <tibble [50 × 3]> <tibble [1 × 3]> #> 10 2009-03-01 <tibble [50 × 3]> <tibble [1 × 3]> #> # … with 40 more rows"},{"path":"/reference/is_quadratic.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if an object is quadratic — is_quadratic","title":"Test if an object is quadratic — is_quadratic","text":"Test object quadratic","code":""},{"path":"/reference/is_quadratic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if an object is quadratic — is_quadratic","text":"","code":"is_quadratic(x)"},{"path":"/reference/is_quadratic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if an object is quadratic — is_quadratic","text":"x object tested.","code":""},{"path":"/reference/is_quadratic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if an object is quadratic — is_quadratic","text":"flag (`TRUE` `FALSE`)","code":""},{"path":"/reference/rebalance_portfolio.html","id":null,"dir":"Reference","previous_headings":"","what":"A Rebalance Structure — rebalance_portfolio","title":"A Rebalance Structure — rebalance_portfolio","text":"Rebalance Structure","code":""},{"path":"/reference/rebalance_portfolio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Rebalance Structure — rebalance_portfolio","text":"","code":"rebalance_portfolio(   .data,   .fn,   ...,   .strategy = c(\"risk_parity\", \"mean_variance\") )"},{"path":"/reference/rebalance_portfolio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Rebalance Structure — rebalance_portfolio","text":".data tabular (non-tidy) tibble. .fn function compute optimization strategy ... Additional arguments passed .fn. .strategy character optimization technique implemented.","code":""},{"path":"/reference/rebalance_portfolio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Rebalance Structure — rebalance_portfolio","text":"tibble.","code":""},{"path":"/reference/rebalance_portfolio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Rebalance Structure — rebalance_portfolio","text":"","code":"stocks <- tibble::tibble(   time = as.Date('2009-01-01') + 0:99,   X    = rnorm(100, 0, 1),   Y    = rnorm(100, 0, 2),   Z    = rnorm(100, 0, 4) )  roll <- construct_rolling_infrastructure(stocks, .initial = 50)  rebal <- construct_rebalance_infrastructure(roll)  # Mean Variance Strategy mu_sigma <- function(.data) {   list(mu = colMeans(.data), sigma = stats::cov(.data)) }  rebalance_portfolio(rebal, mu_sigma, .strategy = \"mean_variance\") #> # A tibble: 50 × 4 #>    .date      .analysis         .assessment      .weights  #>    <date>     <list>            <list>           <list>    #>  1 2009-02-20 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  2 2009-02-21 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  3 2009-02-22 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  4 2009-02-23 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  5 2009-02-24 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  6 2009-02-25 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  7 2009-02-26 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  8 2009-02-27 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  9 2009-02-28 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #> 10 2009-03-01 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #> # … with 40 more rows  # Risk Parity Strategy compute_cov <- function(.data) stats::cov(as.matrix(.data))  rebalance_portfolio(rebal, compute_cov, .strategy = \"risk_parity\") #> # A tibble: 50 × 4 #>    .date      .analysis         .assessment      .weights  #>    <date>     <list>            <list>           <list>    #>  1 2009-02-20 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  2 2009-02-21 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  3 2009-02-22 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  4 2009-02-23 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  5 2009-02-24 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  6 2009-02-25 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  7 2009-02-26 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  8 2009-02-27 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #>  9 2009-02-28 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #> 10 2009-03-01 <tibble [50 × 3]> <tibble [1 × 3]> <dbl [3]> #> # … with 40 more rows"}]
